/*
Title: UART Driver
Description: Main function for part 2 chatroom functionality
Authors: Susan Margevich
Date: 2/6/2019

Some of the contents are obtained by the courtesy of the material provided by Freescale Semiconductor, Inc.
Copyright (c) 2014, Freescale Semiconductor, Inc.
All rights reserved.
*/
/*
#include<stdio.h>
#include "MK64F12.h"
#define BAUD_RATE 9600      //default baud rate 
#define SYS_CLOCK 20485760 //default system clock (see DEFAULT_SYSTEM_CLOCK  in system_MK64F12.c)
#define CHAR_COUNT 25      //change this to modify the max. permissible length of a sentence
#define BUS_CLOCK 120000000 // 60 MHz bus clock

#if 0
//uart3
void put3(char *ptr_str);
void uart_init3(void);
uint8_t uart_getchar3(void);
void uart_putchar3(char ch);

//uart0
void put(char *ptr_str);
void uart_init(void);
uint8_t uart_getchar(void);
void uart_putchar(char ch);

void Temp_Hold(void){
	for(int i = 0; i < 2000000; i++);
}


int main()
{
	
	uart_init3();

	//Temp_Hold();
	//put3("AT+NAME Susan");
	
	uart_init();
	
	char char_buffer[CHAR_COUNT] = {0};
	int i = 0;
	
	put("Welcome to the chatroom: \r\n");
	
	while(1)
	{
		// start on fresh line
		put("\n\r");
		
		// continue getting characters until newline is reached
		while(1)
		{
			
			char_buffer[i] = uart_getchar3();
			
			if(char_buffer[i] == '\r' || char_buffer[i] =='\n')
			{
				int j = 0;
				while(char_buffer[j] != 0x0)
				{
					uart_putchar(char_buffer[j]);
					uart_putchar3(char_buffer[j]);
					//put3("\n\r");
					j += 1;
				}
				break;
			}
			
			if(i < CHAR_COUNT)
			{
				i++;
			}
		}
		
		// reset i to 0
		i = 0;
		put("\n\r");
		
		while(1)
		{
		
			char_buffer[i] = uart_getchar();
			
			if(i < CHAR_COUNT)
			{
				i++;
			}
			else if(char_buffer[i] == '\r' || char_buffer[i] =='\n')
			{
				uart_putchar3(char_buffer[i]);
				put3("\n\r");
				i = 0;
				break;
			}
		}
	}	
		
}  

void put3(char *ptr_str)
{
	while(*ptr_str)
		uart_putchar3(*ptr_str++);
}

void put(char *ptr_str)
{
	while(*ptr_str)
		uart_putchar(*ptr_str++);
}
#endif
*/
